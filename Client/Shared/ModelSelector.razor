@using BlazorApp.Shared
@using System.Runtime.InteropServices.JavaScript

@inject HttpClient Http

@inject ILogger<ModelSelector> Logger

@if (_models is null && Category is not null)
{
    <Card ElementId="model-selector-spinner"
          Class="position-relative"
          Style="height: 468.484px;">
        <CardBody>
            <div class="position-absolute top-50 start-50 translate-middle">
                <Spinner/>
            </div>
        </CardBody>
    </Card>
}
else if (_models is not null)
{
    <div class="row g-3" id="@ModelSelectorId">
        @foreach (var model in _models)
        {
            <div class="col-12">
                <ModelDetails Model="@model"/>
            </div>
        }
    </div>
}
else
{

}

@code {
    private const string ModelSelectorId = "model-selector";
    
    private Model[]? _models;

    [Parameter]
    [EditorRequired]
    public Category? Category { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await JSHost.ImportAsync(nameof(ModelSelector),
            $"../Shared/{nameof(ModelSelector)}.razor.js");
    }

    protected override async Task OnParametersSetAsync()
    {
        _models = null;

        // ScrollToModelSelectorSpinner();

        try
        {
            var models = await Http.GetFromJsonAsync<Model[]>("/api/Models") ?? new Model[] { };

            var filteredModels = models
                .Where(x => x.Category.Id.Equals(Category?.Id))
                .OrderByDescending(x => x.PricePerHour)
                .ThenBy(x => x.Name)
                .ToArray();

            _models = filteredModels;
        }
        catch (Exception e)
        {
            Logger.LogError(e, "Failed to load models");
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (_models?.Any() == true)
            ScrollToModelSelector();
    }

}
