@using BlazorApp.Shared

@inject HttpClient Http

<div class="row g-3 mb-3">
    <div class="col-md-2">
        <Card Color="CardColor.Primary">
            <CardBody>
                <strong class="center-vertically">Choose a category to see the available models</strong>
            </CardBody>
        </Card>
    </div>
    
    <div class="col-md-10">
        <div class="row g-3 h-100">
            @if (_categories is null)
            {
                <div class="col h-100 position-relative">
                    <div class="position-absolute top-50 start-50 translate-middle">
                        <Spinner/>
                    </div>
                </div>
            }
            else
            {
                @foreach (var category in _categories)
                {
                    <div class="col-md-2">
                        <CategorySelectorButton Category="category"
                                                IsActive="@(category == SelectedCategory)"
                                                OnClickCallback="() => OnCategorySelectorButtonClicked(category)"/>
                    </div>
                }
            }
        </div>
    </div>
</div>

<ModelSelector Category="@SelectedCategory" />

@code {
    [Parameter]
    public EventCallback<Category> SelectedCategoryChanged { get; set; }

    private Category[]? _categories;

    protected Category? SelectedCategory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _categories = await Http.GetFromJsonAsync<Category[]>("/api/Categories") ?? new Category[] { };
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private void OnCategorySelectorButtonClicked(Category category)
    {
        if (SelectedCategory == category)
            return;

        SelectedCategory = category;

        SelectedCategoryChanged.InvokeAsync(category);
    }
}
